{"version":3,"sources":["reportWebVitals.js","Square.js","Board.js","game.png","Gomoku.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Piece","styled","div","props","row","col","Chess","value","Square","onClick","Wrapper","ChessBoard","Round","Row","Board","useState","Array","fill","board","setBoard","isBlackNext","useRef","show","setShow","handleCloseDialog","updateBoard","x","y","newValue","newBoard","JSON","parse","stringify","current","countTotal","every","alert","findWinner","currentX","currentY","directionX","directionY","now","tempX","tempY","total","status","map","rowIndex","colIndex","renderBoard","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","window","location","reload","GameLogo","img","Game","src","logo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a757c548.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from \"react\"\r\nimport styled from 'styled-components'\r\n\r\nconst Piece = styled.div`\r\n  background: #DEB887;\r\n  position: relative;\r\n  height: 34px;\r\n  width: 34px;\r\n\r\n  float: left;\r\n  line-height: 34px;\r\n  margin-right: -1px;\r\n  margin-top: -1px;\r\n  padding: 0;\r\n  text-align: center;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    height: 100%;\r\n    width: 2px;\r\n    background: black;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 50%;\r\n\r\n    ${(props) =>\r\n      props.row === 0 &&\r\n      `\r\n      top: 50%;\r\n    `}\r\n\r\n    ${(props) =>\r\n      props.row === 18 &&\r\n      `\r\n      height: 50%;\r\n    `}\r\n  }\r\n\r\n  &:after {\r\n    content: \"\";\r\n    width: 100%;\r\n    height: 3px;\r\n    background: black;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 0;\r\n\r\n    ${(props) =>\r\n      props.col === 0 &&\r\n      `\r\n      left: 50%;\r\n    `}\r\n\r\n    ${(props) =>\r\n      props.col === 18 &&\r\n      `\r\n      width: 50%;\r\n    `}\r\n  }\r\n`\r\n\r\nconst Chess = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  transform: scale(0.6);\r\n  z-index: 1;\r\n  opacity: 1;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    opacity: 0.3;\r\n    box-shadow: 10px 10px 5px rgba(0,0,0,0.9);\r\n  }\r\n\r\n  ${(props) =>\r\n    props.value === \"B\" &&\r\n    `\r\n   background: black;\r\n  `}\r\n\r\n  ${(props) =>\r\n    props.value === \"W\" &&\r\n    `\r\n   background: white;\r\n  `}\r\n`\r\n\r\nexport default function Square(props) {\r\n\r\n  return (\r\n    <Piece \r\n      onClick={() => props.onClick()}\r\n      row={props.row}\r\n      col={props.col}\r\n    >\r\n      <Chess value={props.value} />\r\n    </Piece>\r\n  )\r\n}","import React, { useState, useRef } from \"react\";\r\nimport Square from './Square';\r\nimport styled from 'styled-components'\r\nimport { Button, Modal } from 'react-bootstrap';\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst ChessBoard = styled.div`\r\n  min-width: 630px;\r\n`\r\n\r\nconst Round = styled.div`\r\n  font-weight: bold;\r\n  margin: 15px;\r\n  text-align: center;\r\n`\r\n\r\nconst Row = styled.div`\r\n`\r\n\r\nexport default function Board () {\r\n  const [board, setBoard] = useState(Array(19).fill(Array(19).fill(null)))\r\n  let isBlackNext = useRef(true)\r\n\r\n  const [show, setShow] = useState(false);\r\n  const handleCloseDialog = () => setShow(false);\r\n  const handleShowDialog = () => setShow(true);\r\n\r\n  function updateBoard(x, y, newValue) {\r\n    const newBoard = JSON.parse(JSON.stringify(board))\r\n    if(newBoard[x][y]) return\r\n    newBoard[x][y] = newValue\r\n    newBoard[x][y] = isBlackNext.current ? 'B' : 'W'\r\n    setBoard(newBoard)\r\n    findWinner(newBoard,x,y)\r\n    isBlackNext.current = !isBlackNext.current\r\n  }\r\n\r\n  function renderBoard(row, col, value) {\r\n    return (\r\n      <Square\r\n        row={row}\r\n        col={col}\r\n        value={board[row][col]}\r\n        onClick={() => updateBoard(row, col, value)}\r\n      />\r\n    )\r\n  }\r\n \r\n\r\n  function countTotal(board ,currentX, currentY, directionX, directionY) {\r\n    const now = board[currentX][currentY]\r\n    let tempX = currentX\r\n    let tempY = currentY\r\n    \r\n\r\n    let total = 0\r\n    do {\r\n      tempX += directionX\r\n      tempY += directionY\r\n\r\n      if (\r\n        // 點擊最外圍的棋盤會計算到畫面不存在的數列，因此排除 -1 跟 19\r\n        tempX === -1 || tempY === -1 ||\r\n        tempX === 19 || tempY === 19\r\n      ) break\r\n  \r\n      if (board[tempX][tempY] === now) {\r\n        total++\r\n      } else {\r\n        break\r\n      }\r\n    } while (true)\r\n    return total\r\n  }\r\n\r\n  function findWinner(board, x, y) {\r\n    // 上、下: x+1、x-1 \r\n    // 左、右: y-1、y+1\r\n    // 往左斜(上半、下半): (x-1, y-1)、(x+1, y+1)\r\n    // 往右斜(上半、下半): (x-1, y+1)、(x+1, y-1)\r\n\r\n    if (\r\n      countTotal(board, x, y, 1, 0) + countTotal(board, x, y, -1, 0) >= 4 ||\r\n      countTotal(board, x, y, 0, 1) + countTotal(board, x, y, 0, -1) >= 4 ||\r\n      countTotal(board, x, y, 1, 1) + countTotal(board, x, y, -1, -1) >= 4 ||\r\n      countTotal(board, x, y, 1, -1) + countTotal(board, x, y, -1, 1) >= 4\r\n    ) {\r\n      handleShowDialog()\r\n      return board[x][y];\r\n    }\r\n\r\n    if (board.every((row) => row.every((col) => col))) {\r\n      alert(`平手啦！`)\r\n      return \"draw\";\r\n    }\r\n  }\r\n\r\n  function reload() {\r\n    window.location.reload();\r\n  }\r\n\r\n\r\n  const status = 'Next player: ' + (isBlackNext.current ? 'Black Chess' : 'White Chess')\r\n  return (\r\n    <Wrapper>\r\n      <ChessBoard>\r\n      <Round>{status}</Round>\r\n        {\r\n          board.map((row, rowIndex) => {\r\n            return (\r\n              <Row>\r\n                {\r\n                  row.map((col, colIndex) => {\r\n                    return (\r\n                      renderBoard(rowIndex, colIndex, `${[rowIndex]}${[colIndex]}`)\r\n                    )\r\n                  })\r\n                }\r\n              </Row>\r\n            )\r\n          })\r\n        }\r\n      </ChessBoard>\r\n\r\n      <Modal show={show} onHide={handleCloseDialog}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Game Over</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>Woohoo, winner is {(isBlackNext.current ? 'White' : 'Black')} player!</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={reload}>\r\n            Play again\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleCloseDialog}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Wrapper>\r\n  )\r\n}","export default __webpack_public_path__ + \"static/media/game.e9cf2b75.png\";","import React, {useEffect, useState} from 'react';\r\nimport Board from './Board'\r\nimport styled from 'styled-components'\r\nimport logo from './game.png'\r\n\r\nconst Wrapper = styled.div`\r\n  font-family: Copperplate, Papyrus, fantasy;\r\n  padding: 5px;\r\n`\r\n\r\nconst Title = styled.div`\r\n  text-align: center;\r\n  font-size: 30px;\r\n`\r\n\r\nconst GameLogo = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n\r\n  &:hover{\r\n    transform:scale(1.2);\r\n  }\r\n`\r\n\r\n\r\n\r\nfunction Game (props) {\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Title><GameLogo src={logo}/> I want to play a game : Gomoku <GameLogo src={logo}/></Title>\r\n      <Board />\r\n    </Wrapper>\r\n    \r\n  )\r\n}\r\n\r\nexport default Game","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Game from './Gomoku';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\"\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}